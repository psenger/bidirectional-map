{"version":3,"file":"index.js","sources":["../src/com/cngr/bidirectionalmap/index.js"],"sourcesContent":["/*\n * Copyright (c) 2021, Philip A Senger (https://github.com/psenger/bidirectional-map/blob/main/LICENSE)\n */\n'use strict'\n\n/**\n * Bi Directional Map is a Map, in which the keys and values are registered pointing to each\n * other ( a binary relationship ). EG A->B and B->A. This is a Advanced Data Type and is some times\n * called an Associative Data Structure.\n * @version 1.0.5\n * @see {@link https://en.wikipedia.org/wiki/Bidirectional_map|wikipedia} for further information\n * @param {Iterable} [props] - An Iterable object whose elements are key-value pairs (arrays with two elements, e.g. [[ 1, ['one','two'] ],[ 2, ['three'] ]]). Each key-value pair is added to the new Map; null values are treated as undefined.\n * @constructs BiDirectionalMap\n * @class {BiDirectionalMap}\n */\nclass BiDirectionalMap extends Map {\n\n  /**\n   * Overwrite BiDirectionalMap species to the parent Map constructor\n   * @return {MapConstructor}\n   */\n  static get [Symbol.species]() {\n    return Map;\n  }\n\n  constructor(props) {\n    super(props);\n    if (props && typeof props[Symbol.iterator] === 'function') {\n      for (let [key, value] of props) {\n        this.set(value, key)\n      }\n    }\n  }\n\n  /**\n   * Sets the value for the key in the Map object. Overriding the parent `set` and returns the Map\n   * object. Only works with `String` or `Numbers.\n   * @override\n   * @param {string|number} key - The key of the element to add to the `BiDirectionalMap` object.\n   * @param {string|number} value - The value of the element to add to the `BiDirectionalMap` object.\n   * @returns {BiDirectionalMap}\n   */\n  set(key, value) {\n    // 1.) remove any existing relationships\n    if (super.has(key) || super.has(value)) {\n      const a = super.get(key);\n      const b = super.get(value);\n      super.delete(a);\n      super.delete(b);\n      super.delete(key);\n      super.delete(value);\n    }\n    // 2.) now set the relationship\n    super.set(key, value);\n    super.set(value, key);\n    return this;\n  }\n}\n\nmodule.exports = BiDirectionalMap;\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,GAAG,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA,EAAE,YAAY,MAAM,CAAC,OAAO,CAAC,GAAG;AAChC,IAAI,OAAO,GAAG,CAAC;AACf,GAAG;AACH;AACA,EAAE,WAAW,CAAC,KAAK,EAAE;AACrB,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AACjB,IAAI,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,EAAE;AAC/D,MAAM,KAAK,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE;AACtC,QAAQ,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAC;AAC5B,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE;AAClB;AACA,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC5C,MAAM,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/B,MAAM,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACjC,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACxB,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1B,KAAK;AACL;AACA,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC1B,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC1B,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,CAAC;AACD;AACA,MAAM,CAAC,OAAO,GAAG,gBAAgB;;"}